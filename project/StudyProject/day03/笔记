1.集合  set {'元素1','元素1','元素n'}
 #求多个集合之间的关系
    list1 & list2  取交集
    list1 | list2  取并集 去重
    list1- list2   取差集
 #自动去重
 #不能放列表/字典
 #无序
2.文件操作
    打开文件
        f =open(r'文件绝对路径',    #r取消转义
            mode='r'             #mode=''  打开文件的格式 不写默认读 r    w写
            encoding='utf-8')    #打开的文件编码格式
        f 称为文件句柄，所有文件相关操作都以来f，也叫文件操作符

    读文件
        .read()    #一次性读取所有内容   文件有多大，占多大的内存空间，不好，没有占用的必要
        .readline()  #一次读一行，依次向下读，不知道在哪里结束
        for循环读  #按行读
        for line in f:
                    line = line.strip()
                    if line:print(line)
    写文件
        mode='w'
            #以写的方式打开一个已经存在的文件，相当于清空原来的文件
            #以写的方式打开一个不存在的文件，相当于新建一个空文件
        mode =' a'  文件的追加写操作,不清空原来的文件
        .write('写入内容')
    修改文件
        删除文件 os.remove('文件路径')
        修改文件 os.rename('源名'，'目的名')
    关闭文件 .close()
    参数的介绍
        以字节形式打开文件并读写
        图片和视频文件若要处理，不能通过指定编码格式打开
        mode='rb' 读字节-视频文件
        .read('size')
        mode='wb' 写字节-视频文件
        .write('size')
        查看文件大小
        import os
        os.path.getsize(r'文件绝对路径')
        文件的上下文管理
        with open() as f:       对应的文件操作，不需要我们自己处理文件关闭了
3.函数
    定义：增强代码可读性 降低代码重复
        def 函数名(参数)：
            写在函数中的逻辑
    调用
        函数名(实参)

    参数
        实参角度：
        #按照位置传参
            fun(1,2)
        #按照关键字传参
            fun(a= 1,b =2)
        #混合，先按照位置，后按照关键字
            fun(1,b= 2)

        形参角度：
        #def stu(name,score,sex='女')：   #name score  位置参数，总写在形参的最开始  sex默认参数，总写在位置参数后面
            pass                          #位置参数必传，默认参数不传为默认值，若传了以传的值为主
         stu('老王'，'0')
         stu('老李'，'1'，'男')
            动态传参
             一.
                def 函数名(*args): #接收位置传参，组成元组
                def 函数名(a,b,c,*args):
                print(args)
                *args动态参数写在位置参数之后
                二.
                 def 函数名(**kwargs):
                 demo(a=1,b=2,c=3)   #接收关键字传参，组成字典
                顺序
                位置参数，*args，默认参数，**kwargs
    func(*lst)  -->func(1,2,3)
    func(*tup)   -->func(1,2,3)
    func(*dic)  -->func('k1','k2','k3'
    func(**dic)  --> 按照 hey=value关键字传入

    返回值return
        #不写
            所有代码执行完毕自动结束函数
            返回值none
        #只写return
            遇到return函数结束
            返回值是none
        #return 结果
            #程序结束，返回结果
            #return 结果1,结果2，结果3
            #返回给调用者以元组的形式

4.命名空间和作用域
例：
    a=1
    b=1
    def func(a,b):
        name=1
    命名空间 namespace
        内置命名空间：程序一启动就能用如 print open len  #写好的  内置不能用全局/局部
            全局命名空间：a b func()   # 定义在函数外部的所有变量 可用内置不可用全局
                局部命名空间：name   #定义在函数内部的所有变量    可用全局/内置
    作用域
        全局和局部作用域：内置全局命名空间
        局部作用域：内置全局局部命名空间
    函数中修改全局变量
           #global 变量名    global关键字  ，不推荐
           或
            a=1
            def func():
                return  a+1
            a = func()       #推荐
5.高阶函数
    函数嵌套定义
    定义在内层函数如何调用
二阶函数中修改一阶变量
二阶函数中内层定义 nonlocal 变量名



